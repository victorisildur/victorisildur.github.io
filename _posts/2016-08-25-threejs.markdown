---
layout: post
title: "threejs"
date: 2016-08-25 08:27:00
categories: programming
excerpt: "webGL比2d canvas炫太多了"
---

## 举个栗子

<canvas id='canvas'>
 Your Browser don't support webGL, try update.
</canvas>
<script src="{{site.url}}/js/three.js"></script>
<script src="{{site.url}}/js/simple_cube.js"></script>

## 3d 渲染流程

详解见这个post [introduction-to-webgl-part-1](https://dev.opera.com/articles/introduction-to-webgl-part-1)

主要经历 vertex buffer -> vertex shader -> triangle assembly -> rasterizer -> fragment shader -> frame buffer 这几步。

## 主要组成

```javascript
var scene = new THREE.Scene(),
    camera = new THREE.PerspectiveCamera(...),
    renderer = new THREE.WebGLRenderer(...);
    
scene.add(...);
renderer.render(scene, camera);
```

从精简后的代码可以看出，3d场景的主要组成是三部分：renderer，camera，scene.
形状啦、材质啦、都是scene的一部分而已。

## 材质

例子中的材质是`new THREE.MeshNormalMaterial()`，法向材质，无参数，
由面的法向量和camera的位置关系决定颜色，主要是调试方便。

Lambert材质是散射模型，可以指定color, emissive参数规定散射颜色、自发光颜色。
如不加入光源，散射是看不到的。
光照我理解也是scene的一部分，看到了再试。

Phong材质是适合反射的模型，它多了一个specular参数标示反射系数。

## 物体

Mesh是一种物体，物体由`材质 + 形状`组成。
为什么叫Mesh呢？不是因为它是四方的，而是因为它由顶点、边、面组成。
其他物体还有：线段（Line），骨骼（Bone），粒子系统（Partical System）。

THREE.Mesh继承自THREE.Object3D。
包含scale, rotation, position属性。
回想下我们demo里的旋转实现：

```javascript
function render() {
    requestAnimationFrame(render);
    renderer.render(scene, camera);
    cube.rotation.x += 0.01;
    cube.rotation.y += 0.01;
}
```

scale, rotation, position都是THREE.Vector3实例，所以都有x,y,z三个属性。
