---
layout: post
title: "面向对象分析与设计3：Thinking in UML"
date: 2017-03-10 09:26:00
categories: methology
excerpt: "抽象！抽象！"
---

# 为什么要用UML

React源码，分析React, Element, Component, InstantiateComponent时，感觉画不出类图，画时序图也怪怪的。
有一种紧迫感油然而生，担心hold不住大型设计。
这种时候，我认为时看一些方法论的时候了

## 关于ooad，我们之前学到了些什么

三部曲：

1. 明确用户需求（需求，use case）
2. 应用oo的原则，提高flexibility
3. 继续提高可维护性、可复用性（好像和2差不多）

其中ooad是比较模糊的部分，看别人代码的时候也很难形成自己的抽象。
能画类图，但画完并没有对架构有更清晰的认识。

还是缺少抽象手段啊，加油！

## 建模

建什么？

业务参与者是谁？参与者的目标是什么？
参与者的目标就是我们抽象的角度。

模是什么？

参与者的目标由 `物 + 规则 + 动作` 完成， `事 = 物 + 规则 + 动作`。

业务用例描述了参与者的目标，抽象的角度。
从用例我们可以构建`物 + 规则 + 动作`来最终实现用例。


