---
layout: post
title: "后台技术栈"
date: 2016-12-07 08:27:00
categories: programming
excerpt: "docker, mysql, node..."
---

# Docker

核心：container运行image，image打包好了所需dependency，image云端部署，container不依赖os。

来看看我们的dockerfile:

```docker
FROM xx.xx.com/node:6.9.1
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

ONBUILD ARG NODE_ENV
ONBUILD ENV NODE_ENV $NODE_ENV
ONBUILD COPY package.json /usr/src/app
ONBUILD RUN npm --registry=https://registry.npm.taobao.org --disturl=https://npm.taobao.org/mirrors/node install
ONBUILD RUN node_modules/.bin/tsc -p . | true

CMD ['npm' 'start']
```

Dockerfile的每一行都会新生成一个（临时）image，`FROM ...`这一行是必须的，它声明了base image.

`WORKDIR`命令设置工作目录，影响`pwd`

一些常见问题： 

## could not resolve archive.ubuntu.com

Dockerfile里添加： ```RUN echo nameserver 8.8.8.8 >> /etc/resolve.conf```

# Node

## event loop

event loop在node里底层是libuv实现的，关于libuv km上有篇源码阅读，这里暂时不提。

[https://blog.risingstack.com/node-hero-async-programming-in-node-js/](https://blog.risingstack.com/node-hero-async-programming-in-node-js/)
这里有个很好的视频，其中核心观点是：event的callback是不在stack上的.
比如setTimeout(cb, 5000)，浏览器会首先调用webapi里的timer(cb, 5000)，5s后，timer触发，cb被转移到task queue上。
event loop的作用是不断检查stack是否空了，空了则队列里取一个任务执行。

结构如图所示：

![evnet_loop]({{site.url}}/assets/images/event_loop.png)

# nginx

SPA location:

```
location / {
    root   /usr/local/iot/htdocs/ai-skills;
    index  index.html index.htm;
    rewrite /skill-config/\w+ / break;
    rewrite /interaction-model/\w+ break;
    rewrite /testing/\w+ break;
    rewrite /publish/\w+ break;
}
```

## rewrite break

rewrite break, rewrite后仍在location块内匹配，仍然在rewrite阶段。
rewrite lash，rewrite后跳出location，回退到find-config阶段。

接下来的问题是如下规则总会导致url变化：

```
location /wiki {
  rewrite /wiki /ai-wiki;
}
location /ai-wiki {
  root /usr/local/htdocs;
  index index.html;
}
```

看帖子[without-redirect](https://serverfault.com/questions/763342/nginx-rewrite-without-redirect)意思, 这条rewrite不是目录格式，nginx会帮你加上`/ai-wiki/`，
改成`rewrite /wiki /ai-wiki/`后，问题解决

# try files

rewrite比较挫，推荐用try_files，简单明了

# location ~

正则表达式是真的正则表达式啊，`^~`是高优正则的意思，不是`^`开头的意思，要`~^/hardware($|/.*$)`这样认真写正则！
