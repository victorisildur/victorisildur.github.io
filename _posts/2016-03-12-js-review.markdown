---
layout: post
title: "js细节汇总"
date: 2016-03-12 08:27:00
categories: programming
---

# undefined

```javascript
if (aaa === undefined)
    //如果aaa是Undefined，会抛出ReferenceError!
```

```javascript
JSON.parse(undefined)
//抛异常unexpected token 'u'
```

# array
array.prototype.splice会删掉原数组内容！

# event
长按时，touchend事件不触发！
这是因为中间触发了touchmove事件，解决办法是touchmove的响应函数中调用`e.preventDefault()`即可。
错了！这是个bug！解决办法是touchstart中调用`e.preventDefault()`!

# $.fn.remove
今天遇到一个$.fn.remove失效的问题，暂时不知道什么原因，因为没有任何报错。
而且之前cached widget全部调用过一遍remove，需要仔细观察前一次的后果，然后分析。

# touch
今天看了下zepto的touch.js，swipe事件其实就是touchstart和touchend之间offset>30，就认为是swipe

# JSON
JSON.parse()如果参数已经是一个javascript object,  会抛unexpected token 'o'的异常

# querySelectorAll
返回是NodeList对象。
NodeList.length, NodeList.item(idx)。

NodeList里的值是Element对象。
这个属性比较多，还不熟悉。

# NaN

一个数除以0的结果是NaN

# defer 与 async

defer是说dom解析完后再去执行，顺序可以保证。
async是说dom解析完后再去执行，加载完立马执行，顺序无保证。

用defer发现要等app_cache里的内容，首屏是快了，js还是有点慢。
所以还是要用async，只要想办法确保顺序就行了。
由于我们用的是webpack打包过的，只有一个async文件，所以也是没有问题的。

# 事件代理

由于listener是加在父元素上的，所以e.stopPropagation()是没有用的。

# Int精度问题

js中，所有数字都是64位浮点数，所以最大精确到pow(2, 53) - 1 = 9007199254740991。

处理时，用big-integer库。

# TypeError: 没有isDefaultPrevented属性

分组管理focusout处理时遇到的，原因是trigger事件时，事件名称是空的

# 限流函数

有时我们不希望函数被频繁执行，而是希望其最多久执行一次，这时就需要"限流"

```javascript
/* @func: 输入一个func，返回的函数最短wait时间调用一次，最长mustRun时间调用一次
 * @params:
 *      func{Function}
 *      wait{int}: wait in ms
 *      mustRun{int}: mustRun in ms
 */
function throttle (func, wait, mustRun) {
    var timeout,
        startTime = new Date();

    return function () {
        var context = this,
            args = arguments,
            curTime = new Date();

        window.clearTimeout(timeout);

        if (curTime - startTime > mustRun) {
            func.apply(context, args);
        } else {
            window.setTimeout(func, wait);
        }
    };
}
```

# canvas
`canvas.width`相当于svg的viewBox，画布大小。
为了canvas在高分辨率屏幕上不模糊，采用css宽高100%，画布宽高乘以dpr的做法。